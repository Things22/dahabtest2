# --- wrangler.toml ---

# هذا هو اسم الـ Worker الخاص بك. سيظهر بهذا الاسم في لوحة تحكم Cloudflare.
# يجب أن يكون فريداً على حسابك.
name = "dahab-worker"

# هذا هو المسار إلى الملف الرئيسي (نقطة الدخول) للكود الخاص بالـ Worker.
# بما أن هذا الملف موجود داخل مجلد `packages/worker`، فالمسار يكون نسبياً لهذا المجلد.
main = "src/index.ts"

# تاريخ التوافق. هذا الحقل مهم جداً.
# يضمن أن الـ Worker الخاص بك سيعمل على نسخة من بيئة Cloudflare التي تتوافق مع الكود الخاص بك.
# هذا يحميك من أي تحديثات مستقبلية قد تؤثر على عمل الـ Worker.
compatibility_date = "2024-05-29"


# ---------------------------------------------------
# القسم التالي يحتوي على إعدادات متقدمة قد تحتاجها مستقبلاً
# ---------------------------------------------------


# قسم [vars] مخصص لـ "متغيرات البيئة" (Environment Variables).
# يمكنك الوصول إليها في كود الـ Worker باستخدام `env.VARIABLE_NAME`.
# هذه المتغيرات ليست مشفرة وهي مناسبة للإعدادات العامة.
[vars]
# مثال: يمكنك تحديد بيئة العمل (إنتاج، تطوير، إلخ).
ENVIRONMENT = "production"
# يمكنك الوصول إليها في الكود هكذا: `env.ENVIRONMENT`


# يمكنك ربط موارد Cloudflare الأخرى بالـ Worker الخاص بك.
# الأمثلة التالية معطلة (معلقة) لأنك لا تحتاجها الآن، ولكن من الجيد معرفتها.

# مثال لربط "KV Namespace" (مخزن بيانات بسيط على شكل مفتاح-قيمة).
# يجب أولاً إنشاؤه من لوحة تحكم Cloudflare.
# [[kv_namespaces]]
# binding = "MY_KV_STORE"   # هكذا ستصل إليه في الكود (env.MY_KV_STORE)
# id = "0f2ac74b498b48028cb68387c421e279" # هذا هو الـ ID الذي تحصل عليه من لوحة التحكم


# مثال لربط قاعدة بيانات D1 (قاعدة بيانات SQL بدون خادم).
# [[d1_databases]]
# binding = "DB" # الوصول إليها عبر env.DB
# database_name = "my-database"
# database_id = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"


# لإضافة متغيرات حساسة (مثل مفاتيح API)، يجب استخدام "Secrets" بدلاً من [vars].
# تتم إضافة الـ Secrets عبر سطر الأوامر، وليس مباشرة في هذا الملف.
# مثال للأمر الذي ستستخدمه:
# npx wrangler secret put MY_SECRET_API_KEY
# ثم تصل إليه في الكود عبر `env.MY_SECRET_API_KEY`